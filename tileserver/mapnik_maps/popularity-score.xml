<?xml version="1.0" encoding="utf-8"?>
<Map srs="+init=epsg:3857">
    <Style name="legs" filter-mode="first">
        <Rule>
            <LineSymbolizer stroke="[color]" stroke-width="[width]"/>
        </Rule>
    </Style>
    <Layer name="legs" srs="+proj=longlat +ellps=WGS84 +datum=WGS84 +no_defs">
        <StyleName>legs</StyleName>
        <Datasource>
            <Parameter name="type">postgis</Parameter>
            <Parameter name="host">localhost</Parameter>
            <Parameter name="dbname">simra</Parameter>
            <Parameter name="user">simra</Parameter>
            <Parameter name="password">simra12345simra</Parameter>
            <!--
            Safety-Score (s_score):
                Scary Incidents are counted twice.
                ST_Length(geom::geography) returns the length in meters.
                For more detailed information look into TODO:

            Popularity-Scores (a_score, c_score and p_mscore):
                For more detailed information look into TODO:

            Color gradiant for p_mscore:
                100%  68, 153, 53 dark green
                75%  142, 192, 84 light green
                50%  237, 226,  4 yellow
                30%  239, 125,  7 orange
                15%  227,  11, 19 red
                0%   158,  26, 22 dark red
            -->
            <Parameter name="table">(
                SELECT 
                    *,
                    CASE 
                        WHEN p_mscore BETWEEN 0.0 AND 0.15 THEN concat('rgb(', ROUND(158 + (p_mscore / 0.15) * 69.0), ',', ROUND(26 - (p_mscore / 0.15) * 15.0), ',', ROUND(22 - (p_mscore / 0.15) * 3.0), ')')
                        WHEN p_mscore BETWEEN 0.15 AND 0.30 THEN concat('rgb(', ROUND(227 + ((p_mscore - 0.15) / 0.15) * 12.0), ',', ROUND(11 + ((p_mscore - 0.15) / 0.15) * 114.0), ',', ROUND(19 - ((p_mscore - 0.15) / 0.15) * 8.0), ')')
                        WHEN p_mscore BETWEEN 0.30 AND 0.50 THEN concat('rgb(', ROUND(239 - ((p_mscore - 0.3) / 0.2) * 2.0), ',', ROUND(125 + ((p_mscore - 0.3) / 0.2) * 101.0), ',', ROUND(7 - ((p_mscore - 0.3) / 0.2) * 3.0), ')')
                        WHEN p_mscore BETWEEN 0.50 AND 0.75 THEN concat('rgb(', ROUND(237 - ((p_mscore - 0.5) / 0.25) * 95.0), ',', ROUND(226 - ((p_mscore - 0.5) / 0.25) * 34.0), ',', ROUND(4 + ((p_mscore - 0.5) / 0.25) * 8.0), ')')
                        ELSE concat('rgb(', ROUND(142 - ((p_mscore - 0.75) / 0.25) * 74.0), ',', ROUND(192 - ((p_mscore - 0.75) / 0.25) * 39.0), ',', ROUND(84 - ((p_mscore - 0.75) / 0.25) * 31.0), ')')
                    END as color
                FROM (
                    SELECT
                        *,
                        -- Mixed Popularity-Score
                        ROUND((((1 - a_score) + c_score + s_score * 2.0) / 4), 2) as p_mscore
                    FROM (
                        SELECT
                            *,
                            -- Safety-Score between 0 and 1
                            ROUND(1 - GREATEST(LEAST((1.0 * ("normalIncidentCount" + 4.4 * "scaryIncidentCount") / "count" * ST_Length(geom::geography)), 1), 0)::numeric, 2) as s_score,
                            -- Avoided-Score between 0 and 2
                            CASE
                                WHEN "avoidedCount" > "count" THEN 1.00
                                ELSE ROUND("avoidedCount"::numeric / "count"::numeric, 2)
                            END as a_score,
                            -- Chosen-Score between 0 and 1
                            ROUND("chosenCount"::numeric / "count"::numeric, 2) as c_score,
                            -- Stroke width
                            sqrt(count / 500.0) * 4.5 + 1.5 as width
                        FROM public."SimRaAPI_osmwayslegs"
                        WHERE count > 0
                    ) needed3
                ) needed2
            ) needed</Parameter>
        </Datasource>
    </Layer>
</Map>